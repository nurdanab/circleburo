#!/bin/bash

# –°–∫—Ä–∏–ø—Ç –¥–ª—è –æ–ø—Ç–∏–º–∏–∑–∞—Ü–∏–∏ –≤–∏–¥–µ–æ —Ñ–∞–π–ª–æ–≤ WebM
# –¢—Ä–µ–±—É–µ—Ç —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–Ω—ã–π FFmpeg: brew install ffmpeg

set -e

echo "üé¨ –û–ø—Ç–∏–º–∏–∑–∞—Ü–∏—è –≤–∏–¥–µ–æ —Ñ–∞–π–ª–æ–≤..."

# –î–∏—Ä–µ–∫—Ç–æ—Ä–∏—è —Å –≤–∏–¥–µ–æ
VIDEO_DIR="public/img/projects"
BACKUP_DIR="public/img/projects/originals"

# –°–æ–∑–¥–∞–µ–º –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏—é –¥–ª—è –±—ç–∫–∞–ø–æ–≤ –µ—Å–ª–∏ –µ—ë –Ω–µ—Ç
mkdir -p "$BACKUP_DIR"

# –¶–≤–µ—Ç–∞ –¥–ª—è –≤—ã–≤–æ–¥–∞
GREEN='\033[0;32m'
YELLOW='\033[1;33m'
RED='\033[0;31m'
NC='\033[0m' # No Color

# –ü—Ä–æ–≤–µ—Ä–∫–∞ –Ω–∞–ª–∏—á–∏—è ffmpeg
if ! command -v ffmpeg &> /dev/null; then
    echo -e "${RED}‚ùå FFmpeg –Ω–µ –Ω–∞–π–¥–µ–Ω. –£—Å—Ç–∞–Ω–æ–≤–∏—Ç–µ –µ–≥–æ: brew install ffmpeg${NC}"
    exit 1
fi

echo -e "${YELLOW}üìÇ –û–±—Ä–∞–±–æ—Ç–∫–∞ –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏–∏: $VIDEO_DIR${NC}"

# –°—á–µ—Ç—á–∏–∫ —Ñ–∞–π–ª–æ–≤
count=0
total_original_size=0
total_optimized_size=0

# –§—É–Ω–∫—Ü–∏—è –¥–ª—è –∫–æ–Ω–≤–µ—Ä—Ç–∞—Ü–∏–∏ —Ä–∞–∑–º–µ—Ä–∞ –≤ –±–∞–π—Ç—ã
to_bytes() {
    size=$1
    if [[ $size =~ M$ ]]; then
        echo $(echo "${size%M} * 1024 * 1024" | bc | cut -d. -f1)
    elif [[ $size =~ K$ ]]; then
        echo $(echo "${size%K} * 1024" | bc | cut -d. -f1)
    else
        echo "$size"
    fi
}

# –û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ–º –≤—Å–µ .webm —Ñ–∞–π–ª—ã
for video in "$VIDEO_DIR"/*.webm; do
    if [ -f "$video" ]; then
        filename=$(basename "$video")

        # –ü—Ä–æ–ø—É—Å–∫–∞–µ–º —É–∂–µ –æ–ø—Ç–∏–º–∏–∑–∏—Ä–æ–≤–∞–Ω–Ω—ã–µ —Ñ–∞–π–ª—ã
        if [[ $filename == *"-optimized.webm" ]]; then
            continue
        fi

        # –ü–æ–ª—É—á–∞–µ–º —Ä–∞–∑–º–µ—Ä –æ—Ä–∏–≥–∏–Ω–∞–ª–∞
        original_size=$(du -h "$video" | cut -f1)
        original_bytes=$(du -b "$video" | cut -f1)

        echo -e "\n${YELLOW}üîÑ –û–±—Ä–∞–±–æ—Ç–∫–∞: $filename${NC}"
        echo "   –û—Ä–∏–≥–∏–Ω–∞–ª—å–Ω—ã–π —Ä–∞–∑–º–µ—Ä: $original_size"

        # –°–æ–∑–¥–∞–µ–º –±—ç–∫–∞–ø –µ—Å–ª–∏ –µ–≥–æ –µ—â–µ –Ω–µ—Ç
        if [ ! -f "$BACKUP_DIR/$filename" ]; then
            cp "$video" "$BACKUP_DIR/$filename"
            echo "   ‚úÖ –ë—ç–∫–∞–ø —Å–æ–∑–¥–∞–Ω: $BACKUP_DIR/$filename"
        fi

        # –í—Ä–µ–º–µ–Ω–Ω—ã–π —Ñ–∞–π–ª
        temp_file="${video%.webm}-temp.webm"

        # –û–ø—Ç–∏–º–∏–∑–∞—Ü–∏—è —Å FFmpeg
        # CRF 32-35 –¥–ª—è —Å–∏–ª—å–Ω–æ–≥–æ —Å–∂–∞—Ç–∏—è (—Ö–æ—Ä–æ—à–µ–µ –∫–∞—á–µ—Å—Ç–≤–æ)
        # -b:v 500k - –º–∞–∫—Å–∏–º–∞–ª—å–Ω—ã–π –±–∏—Ç—Ä–µ–π—Ç 500kbps
        # -deadline good - –±–∞–ª–∞–Ω—Å —Å–∫–æ—Ä–æ—Å—Ç–∏/–∫–∞—á–µ—Å—Ç–≤–∞
        # -cpu-used 2 - —Å–∫–æ—Ä–æ—Å—Ç—å –∫–æ–¥–∏—Ä–æ–≤–∞–Ω–∏—è

        ffmpeg -i "$video" \
            -c:v libvpx-vp9 \
            -crf 33 \
            -b:v 500k \
            -maxrate 600k \
            -bufsize 1000k \
            -deadline good \
            -cpu-used 2 \
            -row-mt 1 \
            -threads 4 \
            -tile-columns 2 \
            -frame-parallel 1 \
            -auto-alt-ref 1 \
            -lag-in-frames 25 \
            -g 240 \
            -an \
            -pass 1 \
            -f webm \
            /dev/null \
            -y 2>/dev/null

        ffmpeg -i "$video" \
            -c:v libvpx-vp9 \
            -crf 33 \
            -b:v 500k \
            -maxrate 600k \
            -bufsize 1000k \
            -deadline good \
            -cpu-used 2 \
            -row-mt 1 \
            -threads 4 \
            -tile-columns 2 \
            -frame-parallel 1 \
            -auto-alt-ref 1 \
            -lag-in-frames 25 \
            -g 240 \
            -an \
            -pass 2 \
            "$temp_file" \
            -y 2>/dev/null

        # –£–¥–∞–ª—è–µ–º –≤—Ä–µ–º–µ–Ω–Ω—ã–µ —Ñ–∞–π–ª—ã pass
        rm -f ffmpeg2pass-0.log

        # –ü–æ–ª—É—á–∞–µ–º —Ä–∞–∑–º–µ—Ä –æ–ø—Ç–∏–º–∏–∑–∏—Ä–æ–≤–∞–Ω–Ω–æ–≥–æ —Ñ–∞–π–ª–∞
        optimized_size=$(du -h "$temp_file" | cut -f1)
        optimized_bytes=$(du -b "$temp_file" | cut -f1)

        # –í—ã—á–∏—Å–ª—è–µ–º —ç–∫–æ–Ω–æ–º–∏—é
        saved_bytes=$((original_bytes - optimized_bytes))
        saved_percent=$(echo "scale=1; ($saved_bytes * 100) / $original_bytes" | bc)

        echo "   –û–ø—Ç–∏–º–∏–∑–∏—Ä–æ–≤–∞–Ω–Ω—ã–π —Ä–∞–∑–º–µ—Ä: $optimized_size"
        echo -e "   ${GREEN}üíæ –≠–∫–æ–Ω–æ–º–∏—è: $saved_percent% (~$(du -h <<< $saved_bytes | cut -f1))${NC}"

        # –ó–∞–º–µ–Ω—è–µ–º –æ—Ä–∏–≥–∏–Ω–∞–ª—å–Ω—ã–π —Ñ–∞–π–ª
        mv "$temp_file" "$video"

        # –û–±–Ω–æ–≤–ª—è–µ–º —Å—á–µ—Ç—á–∏–∫–∏
        count=$((count + 1))
        total_original_size=$((total_original_size + original_bytes))
        total_optimized_size=$((total_optimized_size + optimized_bytes))
    fi
done

# –ò—Ç–æ–≥–æ–≤–∞—è —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞
if [ $count -gt 0 ]; then
    total_saved=$((total_original_size - total_optimized_size))
    total_saved_percent=$(echo "scale=1; ($total_saved * 100) / $total_original_size" | bc)

    echo -e "\n${GREEN}‚úÖ –û–ø—Ç–∏–º–∏–∑–∞—Ü–∏—è –∑–∞–≤–µ—Ä—à–µ–Ω–∞!${NC}"
    echo "‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ"
    echo "üìä –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞:"
    echo "   –û–±—Ä–∞–±–æ—Ç–∞–Ω–æ —Ñ–∞–π–ª–æ–≤: $count"
    echo "   –ò—Å—Ö–æ–¥–Ω—ã–π —Ä–∞–∑–º–µ—Ä: $(numfmt --to=iec-i --suffix=B $total_original_size)"
    echo "   –ò—Ç–æ–≥–æ–≤—ã–π —Ä–∞–∑–º–µ—Ä: $(numfmt --to=iec-i --suffix=B $total_optimized_size)"
    echo -e "   ${GREEN}üíæ –û–±—â–∞—è —ç–∫–æ–Ω–æ–º–∏—è: $total_saved_percent% (~$(numfmt --to=iec-i --suffix=B $total_saved))${NC}"
    echo "‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ"
    echo ""
    echo "üí° –ë—ç–∫–∞–ø—ã —Å–æ—Ö—Ä–∞–Ω–µ–Ω—ã –≤: $BACKUP_DIR"
else
    echo -e "${YELLOW}‚ö†Ô∏è  –í–∏–¥–µ–æ —Ñ–∞–π–ª—ã –Ω–µ –Ω–∞–π–¥–µ–Ω—ã –∏–ª–∏ —É–∂–µ –æ–ø—Ç–∏–º–∏–∑–∏—Ä–æ–≤–∞–Ω—ã${NC}"
fi

echo ""
echo "üéØ –†–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–∏:"
echo "   1. –ü—Ä–æ–≤–µ—Ä—å—Ç–µ –∫–∞—á–µ—Å—Ç–≤–æ –æ–ø—Ç–∏–º–∏–∑–∏—Ä–æ–≤–∞–Ω–Ω—ã—Ö –≤–∏–¥–µ–æ"
echo "   2. –ó–∞–ø—É—Å—Ç–∏—Ç–µ npm run build –¥–ª—è —Å–æ–∑–¥–∞–Ω–∏—è production —Å–±–æ—Ä–∫–∏"
echo "   3. –ü—Ä–æ–≤–µ—Ä—å—Ç–µ —Ä–∞–∑–º–µ—Ä –±–∞–Ω–¥–ª–æ–≤ –ø–æ—Å–ª–µ –∏–∑–º–µ–Ω–µ–Ω–∏–π"
