#!/usr/bin/env node

import fs from 'fs';
import path from 'path';
import { fileURLToPath } from 'url';

const __filename = fileURLToPath(import.meta.url);
const __dirname = path.dirname(__filename);

// –ü—É—Ç–∏ –∏ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏
const DIST_PATH = path.resolve(__dirname, '../dist');
const INDEX_HTML_PATH = path.join(DIST_PATH, 'index.html');

// –†–æ—É—Ç—ã –¥–ª—è prerendering
const ROUTES = [
  { path: '/', title: 'CIRCLE BURO ‚Äî –∫—Ä–µ–∞—Ç–∏–≤–Ω–æ–µ –±—é—Ä–æ –≤ –ê–ª–º–∞—Ç—ã | –†–µ–∫–ª–∞–º–Ω–æ–µ –∞–≥–µ–Ω—Å—Ç–≤–æ –ø–æ–ª–Ω–æ–≥–æ —Ü–∏–∫–ª–∞', description: '–ü–æ–º–æ–≥–∞–µ–º –±—Ä–µ–Ω–¥–∞–º –≤—ã–¥–µ–ª—è—Ç—å—Å—è, —Ä–∞—Å—Ç–∏ –∏ –º–∞—Å—à—Ç–∞–±–∏—Ä–æ–≤–∞—Ç—å—Å—è –∑–∞ —Å—á—ë—Ç –∫—Ä–µ–∞—Ç–∏–≤–Ω—ã—Ö –∏–¥–µ–π, —Å—Ç–∏–ª—å–Ω–æ–≥–æ –¥–∏–∑–∞–π–Ω–∞ –∏ —Å–∏—Å—Ç–µ–º–Ω–æ–≥–æ –º–∞—Ä–∫–µ—Ç–∏–Ω–≥–∞.' },
  { path: '/about', title: '–û –∫–æ–º–ø–∞–Ω–∏–∏ CIRCLE BURO ‚Äî –æ–ø—ã—Ç–Ω–∞—è –∫–æ–º–∞–Ω–¥–∞ –º–∞—Ä–∫–µ—Ç–æ–ª–æ–≥–æ–≤, –¥–∏–∑–∞–π–Ω–µ—Ä–æ–≤, –≤–µ–±-—Ä–∞–∑—Ä–∞–±–æ—Ç—á–∏–∫–æ–≤ –∏ –∞—Ä—Ö–∏—Ç–µ–∫—Ç—É—Ä—ã –º–∞–ª—ã—Ö —Ñ–æ—Ä–º.', description: '–ú—ã ‚Äî —Ä–µ–∫–ª–∞–º–Ω–æ–µ –∞–≥–µ–Ω—Ç—Å—Ç–≤–æ –ø–æ–ª–Ω–æ–≥–æ —Ü–∏–∫–ª–∞ –∏–∑ –ê–ª–º–∞—Ç—ã. –°–æ–µ–¥–∏–Ω—è–µ–º —Å—Ç—Ä–∞—Ç–µ–≥–∏—é, –¥–∞–Ω–Ω—ã–µ –∏ –∫—Ä–µ–∞—Ç–∏–≤, —á—Ç–æ–±—ã —Å–æ–∑–¥–∞–≤–∞—Ç—å –±—Ä–µ–Ω–¥—ã –∏ –∫–∞–º–ø–∞–Ω–∏–∏, –∫–æ—Ç–æ—Ä—ã–µ —Ä–∞–±–æ—Ç–∞—é—Ç.' },
  { path: '/circle', title: '–£—Å–ª—É–≥–∞ CIRCLE ‚Äî –∫–æ–º–ø–ª–µ–∫—Å–Ω–æ–µ –ø—Ä–æ–¥–≤–∏–∂–µ–Ω–∏–µ –∏ —Ä–µ–±—Ä–µ–Ω–¥–∏–Ω–≥ –ø–æ–¥ –∫–ª—é—á', description: '–ü–æ–ª–Ω—ã–π —Ü–∏–∫–ª –ø–æ–¥ –∫–ª—é—á: —Å–æ–±–∏—Ä–∞–µ–º —Ä–µ—à–µ–Ω–∏–µ –Ω–∞ –¥–∞–Ω–Ω—ã—Ö –∏ –≥–∏–ø–æ—Ç–µ–∑–∞—Ö, –ø—Ä–æ–≤–µ—Ä—è–µ–º –Ω–∞ —Ä–µ–∞–ª—å–Ω—ã—Ö –º–µ—Ç—Ä–∏–∫–∞—Ö –∏ –≤—ã–≤–æ–¥–∏–º –±—Ä–µ–Ω–¥ –Ω–∞ –∑–∞–º–µ—Ç–Ω—ã–π —Ä—ã–≤–æ–∫ –Ω–∞ —Ä—ã–Ω–∫–µ –ê–ª–º–∞—Ç—ã.' },
  { path: '/semicircle', title: '–£—Å–ª—É–≥–∞ SEMICIRCLE ‚Äî –≥–∏–±–∫–∏–π –ø–∞–∫–µ—Ç: —Ç–æ–ª—å–∫–æ –Ω—É–∂–Ω—ã–µ —É—Å–ª—É–≥–∏ –∏ –∏–Ω—Å—Ç—Ä—É–º–µ–Ω—Ç—ã –¥–ª—è —ç—Ñ—Ñ–µ–∫—Ç–∏–≤–Ω–æ–π —Ä–∞–±–æ—Ç—ã.', description: '–ö–æ–Ω—Å—Ç—Ä—É–∫—Ç–æ—Ä —É—Å–ª—É–≥ ‚Äî —ç—Ç–æ –≥–∏–±–∫–∞—è —Å–±–æ—Ä–∫–∞ –ø–æ–¥ –≤–∞—à–∏ —Ü–µ–ª–∏: —Å—Ç—Ä–∞—Ç–µ–≥–∏—è –∑–∞–¥–∞—ë—Ç –∫—É—Ä—Å, –¥–∏–∑–∞–π–Ω –∏ –∫—Ä–µ–∞—Ç–∏–≤ –ø–æ–≤—ã—à–∞—é—Ç —É–∑–Ω–∞–≤–∞–µ–º–æ—Å—Ç—å, SMM –¥–∞—ë—Ç —Ç—Ä–∞—Ñ–∏–∫ –∏ –≤–æ–≤–ª–µ—á–µ–Ω–∏–µ, –ø—Ä–æ–¥–∞–∫—à–Ω –æ–±–µ—Å–ø–µ—á–∏–≤–∞–µ—Ç –∫–∞—á–µ—Å—Ç–≤–æ –∫–æ–Ω—Ç–µ–Ω—Ç–∞.' },
  { path: '/cycle', title: '–£—Å–ª—É–≥–∞ CYCLE ‚Äî –Ω–µ–ø—Ä–µ—Ä—ã–≤–Ω–æ–µ —Ä–∞–∑–≤–∏—Ç–∏–µ –±—Ä–µ–Ω–¥–∞ –∏ SMM-—Å–æ–ø—Ä–æ–≤–æ–∂–¥–µ–Ω–∏–µ', description: '–î–æ–ª–≥–æ—Å—Ä–æ—á–Ω–æ–µ –ø–∞—Ä—Ç–Ω—ë—Ä—Å—Ç–≤–æ: –µ–∂–µ–º–µ—Å—è—á–Ω–∞—è —Å—Ç—Ä–∞—Ç–µ–≥–∏—è, –∫–æ–Ω—Ç–µ–Ω—Ç, –¥–∏–∑–∞–π–Ω, –ø—Ä–æ–∏–∑–≤–æ–¥—Å—Ç–≤–æ –∏ –∞–Ω–∞–ª–∏—Ç–∏–∫–∞ –¥–ª—è —Å—Ç–∞–±–∏–ª—å–Ω–æ–≥–æ —Ä–æ—Å—Ç–∞ –Ω–∞ —Ä—ã–Ω–∫–µ –ê–ª–º–∞—Ç—ã.' },
  { path: '/project', title: '–ö–µ–π—Å: –ø–æ–ª–Ω—ã–π —Ä–µ–±—Ä–µ–Ω–¥–∏–Ω–≥ Steppe Coffee (–ê–ª–º–∞—Ç—ã) ‚Äî CIRCLE BURO', description: '–†–µ–¥–∏–∑–∞–π–Ω –∞–π–¥–µ–Ω—Ç–∏–∫–∏ –∏ –≤–∏–∑—É–∞–ª—å–Ω–æ–π —Å–∏—Å—Ç–µ–º—ã, —Ç–æ–Ω –±—Ä–µ–Ω–¥–∞ –∏ –∫–æ–Ω—Ç–µ–Ω—Ç –¥–ª—è Steppe Coffee –≤ –ê–ª–º–∞—Ç—ã ‚Äî —Ä–æ—Å—Ç —É–∑–Ω–∞–≤–∞–µ–º–æ—Å—Ç–∏ –∏ –∫–ª—é—á–µ–≤—ã—Ö –º–µ—Ç—Ä–∏–∫.' },
  // English routes
  { path: '/en', title: 'CIRCLE BURO - creative buro in Almaty | Full-cycle advertising agency', description: 'We help brands stand out, grow and scale through creative ideas, stylish design and systematic marketing.' },
  { path: '/en/about', title: 'About CIRCLE BURO company - experienced team of marketers, designers, web developers and small form architecture.', description: 'We are a full-cycle advertising agency from Almaty. We combine strategy, data and creativity to create brands and campaigns that work.' },
  { path: '/en/circle', title: 'CIRCLE Service - comprehensive promotion and turnkey rebranding', description: 'Full turnkey cycle: we build solutions based on data and hypotheses, test with real metrics and bring the brand to a noticeable breakthrough in the Almaty market.' },
  { path: '/en/semicircle', title: 'SEMICIRCLE Service - flexible package: only necessary services and tools for effective work.', description: 'Service constructor - flexible assembly for your goals: strategy sets the course, design and creativity increase recognition, SMM provides traffic and engagement, production ensures content quality.' },
  { path: '/en/cycle', title: 'CYCLE Service - continuous brand development and SMM support', description: 'Long-term partnership: monthly strategy, content, design, production and analytics for stable growth in the Almaty market.' },
  { path: '/en/project', title: 'Case: complete rebranding of Steppe Coffee (Almaty) - CIRCLE BURO', description: 'Identity and visual system redesign, brand tone and content for Steppe Coffee in Almaty - growth in recognition and key metrics.' }
];

// –ë–∞–∑–æ–≤—ã–µ keywords –¥–ª—è SEO
const BASE_KEYWORDS = '–∫—Ä–µ–∞—Ç–∏–≤–Ω–æ–µ –∞–≥–µ–Ω—Ç—Å—Ç–≤–æ –∞–ª–º–∞—Ç—ã, —Ä–µ–∫–ª–∞–º–Ω–æ–µ –∞–≥–µ–Ω—Ç—Å—Ç–≤–æ, –º–∞—Ä–∫–µ—Ç–∏–Ω–≥–æ–≤–æ–µ –∞–≥–µ–Ω—Ç—Å—Ç–≤–æ, digital –º–∞—Ä–∫–µ—Ç–∏–Ω–≥, –±—Ä–µ–Ω–¥–∏–Ω–≥ –∞–ª–º–∞—Ç—ã, SMM –∞–≥–µ–Ω—Ç—Å—Ç–≤–æ';

async function prerender() {
  try {
    console.log('üöÄ Starting prerendering process...');

    // –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å—É—â–µ—Å—Ç–≤–æ–≤–∞–Ω–∏–µ dist –ø–∞–ø–∫–∏
    if (!fs.existsSync(DIST_PATH)) {
      console.error('‚ùå Dist folder not found. Run `npm run build` first.');
      process.exit(1);
    }

    // –ß–∏—Ç–∞–µ–º –æ—Å–Ω–æ–≤–Ω–æ–π index.html
    if (!fs.existsSync(INDEX_HTML_PATH)) {
      console.error('‚ùå index.html not found in dist folder.');
      process.exit(1);
    }

    const indexTemplate = fs.readFileSync(INDEX_HTML_PATH, 'utf8');
    console.log('‚úÖ Template loaded');

    // –°–æ–∑–¥–∞–µ–º prerendered –≤–µ—Ä—Å–∏–∏ –¥–ª—è –∫–∞–∂–¥–æ–≥–æ –º–∞—Ä—à—Ä—É—Ç–∞
    for (const route of ROUTES) {
      const routePath = route.path === '/' ? '' : route.path;
      const outputDir = path.join(DIST_PATH, routePath);

      // –°–æ–∑–¥–∞–µ–º –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏—é –µ—Å–ª–∏ –Ω—É–∂–Ω–æ
      if (routePath && !fs.existsSync(outputDir)) {
        fs.mkdirSync(outputDir, { recursive: true });
      }

      // –ì–µ–Ω–µ—Ä–∏—Ä—É–µ–º HTML —Å –ø—Ä–∞–≤–∏–ª—å–Ω—ã–º–∏ meta-—Ç–µ–≥–∞–º–∏
      const htmlContent = generatePrerenderedHTML(indexTemplate, route);

      // –ü–∏—à–µ–º —Ñ–∞–π–ª
      const outputPath = path.join(outputDir, 'index.html');
      fs.writeFileSync(outputPath, htmlContent);

      console.log(`‚úÖ Generated: ${route.path} -> ${outputPath}`);
    }

    console.log('üéâ Prerendering completed successfully!');

  } catch (error) {
    console.error('‚ùå Prerendering failed:', error);
    process.exit(1);
  }
}

function generatePrerenderedHTML(template, route) {
  const currentDate = new Date().toISOString();
  const baseUrl = 'https://circleburo.kz';
  const canonicalUrl = `${baseUrl}${route.path}`;

  // –û–ø—Ä–µ–¥–µ–ª—è–µ–º —è–∑—ã–∫
  const isEnglish = route.path.startsWith('/en');
  const language = isEnglish ? 'en' : 'ru';
  const locale = isEnglish ? 'en_US' : 'ru_KZ';

  // –ì–µ–Ω–µ—Ä–∏—Ä—É–µ–º Open Graph image URL
  const ogImage = `${baseUrl}/img/circle-fill.webp`;

  // –°–æ–∑–¥–∞–µ–º —Å—Ç—Ä—É–∫—Ç—É—Ä–∏—Ä–æ–≤–∞–Ω–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ
  const structuredData = generateStructuredData(route, baseUrl);

  // –ó–∞–º–µ–Ω—è–µ–º meta-—Ç–µ–≥–∏ –≤ —à–∞–±–ª–æ–Ω–µ
  let html = template;

  // –û—Å–Ω–æ–≤–Ω—ã–µ meta-—Ç–µ–≥–∏
  html = html.replace(/<title>.*?<\/title>/, `<title>${route.title}</title>`);
  html = html.replace(/(<meta name="description" content=")[^"]*"/, `$1${route.description}"`);
  html = html.replace(/(<meta name="keywords" content=")[^"]*"/, `$1${BASE_KEYWORDS}"`);

  // Open Graph
  html = html.replace(/(<meta property="og:title" content=")[^"]*"/, `$1${route.title}"`);
  html = html.replace(/(<meta property="og:description" content=")[^"]*"/, `$1${route.description}"`);
  html = html.replace(/(<meta property="og:url" content=")[^"]*"/, `$1${canonicalUrl}"`);
  html = html.replace(/(<meta property="og:image" content=")[^"]*"/, `$1${ogImage}"`);
  html = html.replace(/(<meta property="og:locale" content=")[^"]*"/, `$1${locale}"`);
  html = html.replace(/(<meta property="og:updated_time" content=")[^"]*"/, `$1${currentDate}"`);

  // Twitter Cards
  html = html.replace(/(<meta name="twitter:title" content=")[^"]*"/, `$1${route.title}"`);
  html = html.replace(/(<meta name="twitter:description" content=")[^"]*"/, `$1${route.description}"`);
  html = html.replace(/(<meta name="twitter:image" content=")[^"]*"/, `$1${ogImage}"`);

  // Canonical URL
  html = html.replace(/(<link rel="canonical" href=")[^"]*"/, `$1${canonicalUrl}"`);

  // HTML lang attribute
  html = html.replace(/<html lang="[^"]*"/, `<html lang="${language}"`);

  // –î–æ–±–∞–≤–ª—è–µ–º —Å—Ç—Ä—É–∫—Ç—É—Ä–∏—Ä–æ–≤–∞–Ω–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ –ø–µ—Ä–µ–¥ –∑–∞–∫—Ä—ã–≤–∞—é—â–∏–º head —Ç–µ–≥–æ–º
  html = html.replace('</head>', `${structuredData}\n</head>`);

  // –î–æ–±–∞–≤–ª—è–µ–º –±–∞–∑–æ–≤—ã–π –∫–æ–Ω—Ç–µ–Ω—Ç –¥–ª—è SEO —Ç–æ–ª—å–∫–æ –≤ noscript (—á—Ç–æ–±—ã –Ω–µ –º–µ—à–∞—Ç—å React)
  const seoContent = generateSEOContent(route, language);
  // –ó–∞–º–µ–Ω—è–µ–º –∫–æ–Ω—Ç–µ–Ω—Ç —Ç–æ–ª—å–∫–æ –≤–Ω—É—Ç—Ä–∏ noscript —Ç–µ–≥–∞
  html = html.replace(/(<noscript>.*?<!-- SEO fallback –∫–æ–Ω—Ç–µ–Ω—Ç –¥–æ –∑–∞–≥—Ä—É–∑–∫–∏ React -->.*?<\/noscript>)/s,
    `<noscript><main style="color: white; padding: 2rem; text-align: center; font-family: Arial, sans-serif;">${seoContent}</main></noscript>`);

  return html;
}

function generateStructuredData(route, baseUrl) {
  const organizationData = {
    "@context": "https://schema.org",
    "@type": "Organization",
    "name": "Circle Creative Buro",
    "alternateName": "Circle Buro",
    "description": "–ö—Ä–µ–∞—Ç–∏–≤–Ω–æ–µ –∞–≥–µ–Ω—Ç—Å—Ç–≤–æ –≤ –ê–ª–º–∞—Ç—ã. –í–µ–±-—Ä–∞–∑—Ä–∞–±–æ—Ç–∫–∞, –¥–∏–∑–∞–π–Ω, –º–∞—Ä–∫–µ—Ç–∏–Ω–≥ –∏ SMM —É—Å–ª—É–≥–∏.",
    "url": baseUrl,
    "logo": {
      "@type": "ImageObject",
      "url": `${baseUrl}/img/circle-fill.webp`,
      "width": 300,
      "height": 300
    },
    "address": {
      "@type": "PostalAddress",
      "streetAddress": "—É–ª. –°–µ–π—Ñ—É–ª–ª–∏–Ω–∞, 458",
      "addressLocality": "–ê–ª–º–∞—Ç—ã",
      "addressRegion": "–ê–ª–º–∞—Ç–∏–Ω—Å–∫–∞—è –æ–±–ª–∞—Å—Ç—å",
      "postalCode": "050000",
      "addressCountry": "KZ"
    },
    "geo": {
      "@type": "GeoCoordinates",
      "latitude": "43.238949",
      "longitude": "76.889709"
    },
    "areaServed": [
      {
        "@type": "City",
        "name": "–ê–ª–º–∞—Ç—ã"
      },
      {
        "@type": "Country",
        "name": "–ö–∞–∑–∞—Ö—Å—Ç–∞–Ω"
      }
    ]
  };

  const websiteData = {
    "@context": "https://schema.org",
    "@type": "WebSite",
    "name": "Circle Creative Buro",
    "url": baseUrl,
    "description": "–ö—Ä–µ–∞—Ç–∏–≤–Ω–æ–µ –∞–≥–µ–Ω—Ç—Å—Ç–≤–æ –≤ –ê–ª–º–∞—Ç—ã",
    "publisher": {
      "@type": "Organization",
      "name": "Circle Creative Buro"
    },
    "inLanguage": ["ru", "en"]
  };

  return `
    <script type="application/ld+json">
      ${JSON.stringify(organizationData)}
    </script>
    <script type="application/ld+json">
      ${JSON.stringify(websiteData)}
    </script>
  `;
}

function generateSEOContent(route, language) {
  const isHome = route.path === '/' || route.path === '/en';
  const isEnglish = route.path.startsWith('/en');

  if (isHome) {
    if (isEnglish) {
      return `
        <h1>CIRCLE BURO - creative buro in Almaty</h1>
        <p>We help brands stand out, grow and scale through creative ideas, stylish design and systematic marketing.</p>
        <nav>
          <a href="/en/about">About</a>
          <a href="/en/circle">Circle</a>
          <a href="/en/semicircle">Semicircle</a>
          <a href="/en/cycle">Cycle</a>
          <a href="/en/project">Projects</a>
        </nav>
      `;
    } else {
      return `
        <h1>CIRCLE BURO ‚Äî –∫—Ä–µ–∞—Ç–∏–≤–Ω–æ–µ –±—é—Ä–æ –≤ –ê–ª–º–∞—Ç—ã</h1>
        <p>–ü–æ–º–æ–≥–∞–µ–º –±—Ä–µ–Ω–¥–∞–º –≤—ã–¥–µ–ª—è—Ç—å—Å—è, —Ä–∞—Å—Ç–∏ –∏ –º–∞—Å—à—Ç–∞–±–∏—Ä–æ–≤–∞—Ç—å—Å—è –∑–∞ —Å—á—ë—Ç –∫—Ä–µ–∞—Ç–∏–≤–Ω—ã—Ö –∏–¥–µ–π, —Å—Ç–∏–ª—å–Ω–æ–≥–æ –¥–∏–∑–∞–π–Ω–∞ –∏ —Å–∏—Å—Ç–µ–º–Ω–æ–≥–æ –º–∞—Ä–∫–µ—Ç–∏–Ω–≥–∞.</p>
        <nav>
          <a href="/about">–û –Ω–∞—Å</a>
          <a href="/circle">Circle</a>
          <a href="/semicircle">Semicircle</a>
          <a href="/cycle">Cycle</a>
          <a href="/project">–ü—Ä–æ–µ–∫—Ç—ã</a>
        </nav>
      `;
    }
  }

  const homeLink = isEnglish ? '/en' : '/';
  const navLinks = isEnglish ? {
    home: { href: '/en', text: 'Home' },
    about: { href: '/en/about', text: 'About' },
    circle: { href: '/en/circle', text: 'Circle' },
    semicircle: { href: '/en/semicircle', text: 'Semicircle' },
    cycle: { href: '/en/cycle', text: 'Cycle' },
    project: { href: '/en/project', text: 'Projects' }
  } : {
    home: { href: '/', text: '–ì–ª–∞–≤–Ω–∞—è' },
    about: { href: '/about', text: '–û –Ω–∞—Å' },
    circle: { href: '/circle', text: 'Circle' },
    semicircle: { href: '/semicircle', text: 'Semicircle' },
    cycle: { href: '/cycle', text: 'Cycle' },
    project: { href: '/project', text: '–ü—Ä–æ–µ–∫—Ç—ã' }
  };

  return `
    <h1>${route.title}</h1>
    <p>${route.description}</p>
    <nav>
      <a href="${navLinks.home.href}">${navLinks.home.text}</a>
      <a href="${navLinks.about.href}">${navLinks.about.text}</a>
      <a href="${navLinks.circle.href}">${navLinks.circle.text}</a>
      <a href="${navLinks.semicircle.href}">${navLinks.semicircle.text}</a>
      <a href="${navLinks.cycle.href}">${navLinks.cycle.text}</a>
      <a href="${navLinks.project.href}">${navLinks.project.text}</a>
    </nav>
  `;
}

// –ó–∞–ø—É—Å–∫–∞–µ–º prerendering
prerender();